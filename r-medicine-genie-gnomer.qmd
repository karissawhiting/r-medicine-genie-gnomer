---
format: 
  revealjs: 
    theme:  [default, style.scss]
    transition: fade
    slide-number: true
execute:
  echo: true 
  output: asis
editor: source
---


# Analyzing GENIE Genomic Data with {genieBPC} and {gnomeR} {background-color="#007CBA" style="text-align: center;"}

```{r}
#| echo: false
#| results: false
set.seed(20230515)

knitr::opts_chunk$set(echo = TRUE, results = 'asis')

library(tidyverse)
library(gtsummary)
library(synapser)
library(genieBPC)

# let's check if reg gt tables work now. if so, ditch this
knit_print.gtsummary <- function(x, ...) {
   gtsummary::as_gt(x) |>
     gt::as_raw_html()
}

knit_print.gt_tbl <- function(x, ...) {
  gt::as_raw_html(x)
} 


registerS3method("knit_print", "gtsummary", knit_print.gtsummary)
registerS3method("knit_print", "gt_tbl", knit_print.gt_tbl)

devtools::install_github("MSKCC-Epi-Bio/gnomeR")
# fill for font awesome icons
fa_fill <- "#606060"

genieBPC::set_synapse_credentials()


```

![](images/gnomeR-logo.png){width="250px"}

# Processing Data {background-color="#007CBA" style="text-align: center;"}

# {genieBPC} + {gnomeR} Pipeline

![](images/genie-gnomer-pipline.png)

## Case Study

```{r}
#| echo: false
#| results: false

nsclc_2 <- pull_data_synapse("NSCLC", "v2.0-public")

nsclc_2_ex <- create_analytic_cohort(nsclc_2$NSCLC_v2.0, stage_dx = "Stage IV",
                                 histology = "Adenocarcinoma")
```

### Data Descriptives
```{r}
#| echo: false
library(gtsummary)
nsclc_2$NSCLC_v2.0$ca_dx_index %>% select(institution, ca_hist_adeno_squamous) %>%
  tbl_cross()

nsclc_2$NSCLC_v2.0$ca_dx_index %>% select(institution, ca_hist_adeno_squamous) %>%
  tbl_cross()

nsclc_2_ex$cohort_ca_dx %>% count(institution)%>% gt::gt()
```
:::


## Processing Data: Issues To Address

    
1) **Multiple Samples Per Patient**

2)  **Cohort Inclusion**
    -   Samples with no alterations may be dropped when pulling data

3)  **Data Formats & Gene Standards Often Inconsistent**
    -   Column names, data formats and gene names may differ between studies or even within studies!
    
4)  **Multi-Institutional Studies Use Several Gene Panels**
    -   Samples may be sequenced using different panels therefore the non overlapping genes have to be annotated as missing


5)  **Missing Data in Mutation Status**

    
:::{.notes}
1)  **Research Samples vs. IMPACT Samples**
    -   Some samples may be sequenced outside MSK or using different panels.
    -   [Check panels and annotate NAs accordingly]{.emphasized}
2)  **Cohort Inclusion**
    -   Samples with no alterations may be dropped when pulling data
    -   [Use `samples` arg of `create_gene_binary()` and check data]{.emphasized}
3)  **Data Formats & Gene Standards Often Inconsistent**
    -   Column names, data formats and gene names may differ between studies or even within studies!
    -   [Reformat data as necessary and check gene aliases (`recode_aliases = TRUE`)]{.emphasized}
4)  **Missing Data in Mutation Status**
    -   Mutation Status is sometimes missing data.
    -   [Check Mutation Status column]{.emphasized}
    
:::


## Process Data: Select One Sample Per Patient

:::: {.columns}

::: {.column width="40%"}

- Patients can have many NGS values
- Setting criteria -> 1 sample
- If multiple match the criteria, random sample taken

:::

::: {.column width="60%"}


```{r}
#| echo: true
nsclc_samp <- select_unique_ngs(
  data_cohort = nsclc_2_ex$cohort_ngs,
  oncotree_code = "LUAD",
  sample_type = "Metastasis",
  min_max_time = "max"
)

```

:::

::::

## Overview of `create_gene_binary()` structure {.scrollable}

```{r}
#| echo: false
#| message: false
#| include: false


cna_synapse_long <- gnomeR::pivot_cna_longer(nsclc_2$NSCLC_v2.0$cna)

nsclc_2_sample_panels <- nsclc_samp %>% 
  select(cpt_seq_assay_id, cpt_genie_sample_id) %>%
  rename(panel_id = cpt_seq_assay_id,
         sample_id = cpt_genie_sample_id) %>%
   mutate(panel_id = ifelse(!is.na(panel_id),
                               panel_id, "no"))


#gnomeR::reformat_fusion(nsclc_2$NSCLC_v2.0$fusions)


bin_mat <- gnomeR::create_gene_binary(
    mutation = nsclc_2$NSCLC_v2.0$mutations_extended,
    cna = cna_synapse_long,
    #fusion = ,
    samples = nsclc_2_sample_panels$sample_id,
    specify_panel = nsclc_2_sample_panels
  ) %>% head()
```

```{r}
#| echo: false
bin_mat %>% gt::gt()
```

## Process Data: Format Data in Analysis-ready Matrix


```{r, `code-line-numbers`="|2-3" }
#| output-location: column
#| echo: true
#| eval: false
gnomeR::create_gene_binary(
  samples = NULL,
  specify_panel = NULL,
  mutation = NULL,
  mut_type = NULL,
  cna = NULL,
  fusion = NULL,
  recode_aliases = NULL)
```

## Process Data: Sample/Panel pitfalls {auto-animate="true"}

::: {.fragment .fade-out}
```{r, `code-line-numbers`="2" }
#| output-location: column-fragment
#| echo: true
#| eval: false

gnomeR::create_gene_binary(
  samples = nsclc_samp$cpt_genie_sample_id,
  sample_panel = NULL,
  mutation = NULL,
  mut_type = NULL,
  cna = NULL,
  fusion = NULL,
  recode_aliases = NULL)
```
:::

```{r}
#| output-location: column
#| echo: false
nsclc_samp %>% select(cpt_seq_assay_id) %>% count(cpt_seq_assay_id)%>% gt::gt()
```


## Process Data: Sample/Panel pitfalls {auto-animate="true"}
:::: {.columns}

::: {.column width="50%"}
```{r, `code-line-numbers`="3" }
#| echo: true
#| eval: false

gnomeR::create_gene_binary(
  samples = nsclc_samp$cpt_genie_sample_id,
  sample_panel = nsclc_panels,
  mutation = NULL,
  mut_type = NULL,
  cna = NULL,
  fusion = NULL,
  recode_aliases = NULL)
```
:::

::: {.column width="50%"}

```{r}
#| output-location: column-fragment
#| echo: true
#| eval: false

nsclc_panels <- data.frame(
  sample_id = nsclc_samp$cpt_genie_sample_id,
  panel_id = nsclc_samp$cpt_seq_assay_id
)
```


:::

::::


## Process Data: File types {.scrollable}

::: {.fragement .fade_out}
```{r, `code-line-numbers`="4|5" }
#| eval: false

gnomeR::create_gene_binary(
  samples = nsclc_samp$cpt_genie_sample_id,
  sample_panel = nsclc_panels,
  mutation = nsclc_2$NSCLC_v2.0$mutations_extended,
  mut_type = "germline_only",
  cna = NULL,
  fusion = NULL,
  recode_aliases = NULL)

```
:::

::: {.fragement .fade_out}
```{r, `code-line-numbers`="6" }
#| output-location: column-fragment
#| eval: false

gnomeR::create_gene_binary(
  samples = nsclc_samp$cpt_genie_sample_id,
  sample_panel = nsclc_panels,
  mutation = nsclc_2$NSCLC_v2.0$mutations_extended,
  mut_type = "omit_germline",
  cna = reform_cna,
  fusion = NULL,
  recode_aliases = NULL)

```


- CNA file formatted as matrix
```{r}
#| output-location: column
#| echo: false

positions <- c(1:3)
nsclc_2$NSCLC_v2.0$cna %>% select(positions) %>% gt::gt()

```

```{r}

reform_cna <- gnomeR::pivot_cna_longer(nsclc_2$NSCLC_v2.0$cna)

```

```{r}
#| echo: false

nsclc_2$NSCLC_v2.0$cna %>% slice(1:15) %>% gt::gt()

```


## Process Data: File types {.scrollable}


```{r, `code-line-numbers`="7" }
#| output-location: column-fragment
#| eval: false

gnomeR::create_gene_binary(
  samples = nsclc_samp$cpt_genie_sample_id,
  sample_panel = nsclc_panels,
  mutation = nsclc_2$NSCLC_v2.0$mutations_extended,
  mut_type = "omit_germline",
  cna = reform_cna,
  fusion = reform_fus,
  recode_aliases = NULL)

```

::: {.fragement .fade_out}
- Multiple rows per fusion

```{r}
#| output-location: column
#| echo: false
library(gt)
positions <- c(1, 4, 5)
nsclc_2$NSCLC_v2.0$fusions %>% 
  select(all_of(positions))%>%
  arrange(Tumor_Sample_Barcode) %>% 
  filter(Tumor_Sample_Barcode == "GENIE-MSK-P-0004827-T01-IM5") %>%
  gt::gt() %>% gt::tab_style(
  style = cell_fill(color = 'lightcyan'), locations = cells_body(
    rows = Fusion == "XPO1-USP34 fusion"
  ))

reform_fus <- gnomeR::reformat_fusion(nsclc_2$NSCLC_v2.0$cna)

```
:::

```{r}
#| echo: false

nsclc_2$NSCLC_v2.0$reform_fus %>% gt::gt()

```

## Process Data: Gene Aliases

Highlight Gene Alias and Gene NA panel annotation

```{r, `code-line-numbers`="8" }
#| eval: false

gnomeR::create_gene_binary(
  samples = nsclc_samp$cpt_genie_sample_id,
  sample_panel = nsclc_panels,
  mutation = nsclc_2$NSCLC_v2.0$mutations_extended,
  mut_type = "omit_germline",
  cna = reform_cna,
  fusion = reform_fus,
  recode_aliases = TRUE)

```

## Process Data: View messages
```{r, `code-line-numbers`="8" }
#| output-location: column-fragment
#| eval: true
#| echo: false

gnomeR::create_gene_binary(
  samples = nsclc_samp$cpt_genie_sample_id,
  sample_panel = nsclc_panels,
  mutation = nsclc_2$NSCLC_v2.0$mutations_extended,
  mut_type = "omit_germline",
  cna = reform_cna,
  fusion = reform_fus,
  recode_aliases = TRUE)%>%
  select(all_of(1:10))%>%
  slice(1:20)%>%
  gt()

```



